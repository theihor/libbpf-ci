name: Simplified kernel build

on:
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: string
        description: The architecture to build against, e.g x86_64, aarch64, s390x...
        default: x86_64
      toolchain_full:
        required: true
        type: string
        description: The toolchain and for llvm, its version, e.g gcc, llvm-15
        default: llvm-17
      toolchain:
        required: true
        type: string
        description: The toolchain, e.g gcc, llvm
        default: llvm
      runs_on:
        required: true
        type: string
        description: The runners to run the test on. This is a json string representing an array of labels.
        default: ubuntu-24.04
      llvm-version:
        required: true
        type: string
        description: The version of LLVM used to build selftest.... for llvm toolchain, this should match the one from toolchain_full, for gcc it is an arbritrary version we decide to build selftests against.
        default: '17'
      kernel:
        required: true
        type: string
        description: The kernel to run the test against. For KPD this is always LATEST, which runs against a newly built kernel.
        default: LATEST
      release:
        required: false
        type: boolean
        description: Build selftest with -O2 optimization
        default: false

jobs:
  build:
    name: build for ${{ inputs.arch }} with ${{ inputs.toolchain_full }}${{ inputs.release && '-O2' || '' }}
    runs-on: ${{ inputs.runs_on }}
    timeout-minutes: 100
    env:
        KERNEL: ${{ inputs.kernel }}
        REPO_ROOT: ${{ github.workspace }}/kernel-patches/bpf
        REPO_PATH: kernel-patches/bpf
        KBUILD_OUTPUT: kbuild-output/
        BASE_BRANCH: >- 
          ${{ github.event_name == 'push' && github.ref_name
              || github.base_ref
              || 'bpf-next_base'
          }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout theihor/libbpf-ci
      - uses: actions/checkout@v4
        name: Checkout kernel-patches/bpf
        # We fetch an actual bit of history here to facilitate incremental
        # builds (which may check out some earlier upstream change).
        with:
          fetch-depth: 5
          repository: kernel-patches/bpf
          path: kernel-patches/bpf
      - uses: ./prepare-incremental-build
        with:
          repo-root: ${{ env.REPO_ROOT }}
          base-branch: ${{ env.BASE_BRANCH }}
          arch: ${{ inputs.arch }}
          toolchain_full: ${{ inputs.toolchain_full }}
      - uses: ./patch-kernel
        with:
          repo-root: ${{ env.REPO_ROOT }}
      # - name: Setup build environment
      #   uses: ./setup-build-env
      #   with:
      #     arch: ${{ inputs.arch }}
      #     llvm-version: ${{ inputs.llvm-version }}
      #     pahole: c2f89dab3f2b0ebb53bab3ed8be32f41cb743c37
      # - name: Print toolchain version used
      #   shell: bash
      #   run: |
      #     TOOLCHAIN=${{ inputs.toolchain }}
      #     if [ $TOOLCHAIN = "llvm" ]; then
      #       TOOLCHAIN="clang-${{ inputs.llvm-version }}"
      #     fi
      #     ${TOOLCHAIN} --version
      # - name: Build kernel image
      #   uses: ./build-linux
      #   with:
      #     arch: ${{ inputs.arch }}
      #     toolchain: ${{ inputs.toolchain }}
      #     kbuild-output: ${{ env.KBUILD_OUTPUT }}
      #     max-make-jobs: 32
      #     llvm-version: ${{ inputs.llvm-version }}
      # - name: Build selftests
      #   uses: ./build-selftests
      #   with:
      #     arch: ${{ inputs.arch }}
      #     toolchain: ${{ inputs.toolchain }}
      #     kbuild-output: ${{ env.KBUILD_OUTPUT }}
      #     max-make-jobs: 32
      #     llvm-version: ${{ inputs.llvm-version }}
      #   env:
      #     # RELEASE= disables all optimizaions
      #     # RELEASE=0 adds -O0 make flag
      #     # RELEASE=1 adds -O2 make flag
      #     RELEASE: ${{ inputs.release && '1' || '' }}
      # - if: ${{ github.event_name != 'push' }}
      #   name: Build samples
      #   uses: ./build-samples
      #   with:
      #     arch: ${{ inputs.arch }}
      #     toolchain: ${{ inputs.toolchain }}
      #     kbuild-output: ${{ env.KBUILD_OUTPUT }}
      #     max-make-jobs: 32
      #     llvm-version: ${{ inputs.llvm-version }}
